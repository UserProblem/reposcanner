/*
 * Repository Secrets Scanner
 *
 * This is a simple backend API to allow a user to configure repositories for scanning, trigger a scan of those repositories, and retrieve the results.
 *
 * API version: 0.0.1
 * Contact: sean.critica@gmail.com
 * Generated by: Swagger Codegen (https://github.com/swagger-api/swagger-codegen.git)
 */

package swagger

import (
	"fmt"
	"net/http"
	"strings"

	"github.com/gorilla/mux"
)

type Route struct {
	Name        string
	Method      string
	Pattern     string
	HandlerFunc http.HandlerFunc
}

type Routes []Route

func NewRouter() *mux.Router {
	router := mux.NewRouter().StrictSlash(true)
	for _, route := range routes {
		var handler http.Handler
		handler = route.HandlerFunc
		handler = Logger(handler, route.Name)

		router.
			Methods(route.Method).
			Path(route.Pattern).
			Name(route.Name).
			Handler(handler)
	}

	return router
}

func Index(w http.ResponseWriter, r *http.Request) {
	fmt.Fprintf(w, "Hello World!")
}

var routes = Routes{
	Route{
		"Index",
		"GET",
		"/v0/",
		Index,
	},

	Route{
		"AddRepository",
		strings.ToUpper("Post"),
		"/v0/repository",
		AddRepository,
	},

	Route{
		"AddScan",
		strings.ToUpper("Post"),
		"/v0/repository/{id}/startScan",
		AddScan,
	},

	Route{
		"DeleteRepository",
		strings.ToUpper("Delete"),
		"/v0/repository/{id}",
		DeleteRepository,
	},

	Route{
		"GetRepository",
		strings.ToUpper("Get"),
		"/v0/repository/{id}",
		GetRepository,
	},

	Route{
		"ListRepositories",
		strings.ToUpper("Get"),
		"/v0/repositories",
		ListRepositories,
	},

	Route{
		"ModifyRepository",
		strings.ToUpper("Put"),
		"/v0/repository/{id}",
		ModifyRepository,
	},

	Route{
		"AddScan",
		strings.ToUpper("Post"),
		"/v0/repository/{id}/startScan",
		AddScan,
	},

	Route{
		"DeleteScan",
		strings.ToUpper("Delete"),
		"/v0/scan/{id}",
		DeleteScan,
	},

	Route{
		"GetScan",
		strings.ToUpper("Get"),
		"/v0/scan/{id}",
		GetScan,
	},

	Route{
		"ListScans",
		strings.ToUpper("Get"),
		"/v0/scans",
		ListScans,
	},
}
